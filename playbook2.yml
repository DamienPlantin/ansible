- name: Brief Ansible PLaybook 2
  hosts: proxy
  # gather_facts: no
  remote_user: root
  become: yes
  vars:
    packages:
      - bash
      - python-apt
      - sudo
      - nginx
      - letsencrypt
      - fail2ban

    domaine_name: vm-damien2.francecentral.cloudapp.azure.com
    key_file: /etc/letsencrypt/cert/-key.pem
    cert_file: /etc/letsencrypt/cert/letsencrypt.crt
    csr_file: /etc/letsencrypt/cert/letsencrypt.csr
    conf_file: /etc/nginx/sites-available/default
    server_name: localhost

  tasks:
    - name: Install packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: '{{ packages }}'

    # - name: Download acme-tiny
    #   get_url:
    #     url: https://raw.githubusercontent.com/diafygi/acme-tiny/master/acme_tiny.py
    #     dest: /usr/local/bin/acme_tiny.py
    #     mode: 0440

    - name: Create directories for SSL certificates
      file:
        path: /etc/letsencrypt/cert
        state: directory

    - name: copy index.html
      template:
        src: templates/index.html.j2
        dest: /usr/share/nginx/html/index.html
        mode: 0644

    - name: copy nginx config file
      template:
        src: templates/nginx.conf.j2
        dest: '{{ conf_file }}'
      notify: restart nginx

    - name: Generate a Let's Encrypt Certificate
      community.crypto.x509_certificate:
        path: '{{ cert_file }}'
        csr_path: '{{ csr_file }}'
        provider: acme
        acme_accountkey_path: '{{ key_file }}'
        acme_challenge_path: /etc/nginx/ssl/

    # - name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
    #   community.crypto.openssl_privatekey:
    #     path: '{{ key_file }}'

    # - name: Generate Signing Key
    #   community.crypto.openssl_privatekey:
    #     path: '{{ cert_file }}'

    # - name: Generate CSR
    #   community.crypto.openssl_csr:
    #     path: '{{ csr_file }}'
    #     privatekey_path: '{{ key_file }}'
    #     common_name: '{{domaine_name}}'

    - name: create acme challenge
      community.crypto.acme_certificate:
        acme_version: 2
        terms_agreed: yes
        account_key_src: '{{ key_file }}'
        csr: '{{ csr_file }}'
        cert: '{{ cert_file }}'
        challenge: http-01
        acme_directory: https://acme-staging-v02.api.letsencrypt.org/directory
        remaining_days: 60
      register: challenge

    - name: validate acme challenge
      community.crypto.acme_certificate:
        acme_version: 2 
        account_key_src: '{{ key_file }}'
        csr: '{{ csr_file }}'
        cert: '{{ cert_file }}'
        # fullchain: /etc/nginx/ssl/nginx-fullchain.crt
        # chain: /etc/nginx/ssl/nginx-intermediate.crt
        challenge: http-01
        acme_directory: https://acme-staging-v02.api.letsencrypt.org/directory
        remaining_days: 60
        data: "{{ challenge }}"
      when: challenge is changed

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted