- name: Brief Ansible PLaybook 2
  hosts: proxy
  # gather_facts: no
  remote_user: root
  become: yes
  # vars_files: vars.yml
  vars:
    packages:
      - bash
      - python-apt
      - sudo
      - nginx
      # - letsencrypt
      - fail2ban

    domaine_name: vmdamien2.francecentral.cloudapp.azure.com
    ssl_crt:     "{{ domain }}.crt"
    ssl_full:     "{{ domain }}-fullchain.crt"
    ssl_chain:   "{{ domain }}-intermediate.crt"
    ssl_key_a:     "{{ domain }}.pem"
    ssl_key_b:     "{{ domain }}.pem"
    ssl_csr:     "{{ domain }}.csr"
    server_name: localhost
    domain: vm2damien.francecentral.cloudapp.azure.com
    certs_path: ~/certs
    crt_common_name: vm2damien.francecentral.cloudapp.azure.com
    site_path: site

  tasks:
    - name: Install packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: '{{ packages }}'

    # Configuration du NGINX
    - name: "create www directory"
      file:
        path: /var/www/{{ domain }}
        state: directory
        mode: '0775'

    - name: copy index.html
      template:
        src: templates/index.html.j2
        dest: /usr/share/nginx/html/index.html
        mode: 0644

    - name: copy nginx config file
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf
      notify: restart nginx

    # Génération clé SSL
    - name: Create directory to store certs
      file:
        path: "{{ certs_path }}"
        state: directory

    - name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
      community.crypto.openssl_privatekey:
        path: '{{ ssl_key_a }}'
    
    - name: Make acme_account
      community.crypto.acme_account:
        acme_version: 2
        account_key_src: '{{ ssl_key_a }}'
        state: present
        terms_agreed: yes
        acme_directory: https://acme-staging-v02.api.letsencrypt.org/directory
        contact:
          - mailto:damien2809@hotmail.fr

    - name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
      community.crypto.openssl_privatekey:
        path: '{{ ssl_key_b }}'

    - name: Generate CSR
      community.crypto.openssl_csr:
        path: '{{ ssl_csr }}'
        privatekey_path: '{{ ssl_key_b }}'
        common_name: '{{domaine_name}}'

    # - name: Generate Signing Key
    #   community.crypto.x509_certificate:
    #     provider: selfsigned
    #     path: '{{ ssl_crt }}'
    #     privatekey_path: '{{ ssl_key }}'
    #     csr_path: '{{ ssl_csr }}'

    - name: create acme challenge
      community.crypto.acme_certificate:
        acme_version: 2
        terms_agreed: yes
        account_key_src: '{{ ssl_key_a }}'
        csr: '{{ ssl_csr }}'
        dest: '{{ ssl_crt }}'
        challenge: http-01
        acme_directory: https://acme-staging-v02.api.letsencrypt.org/directory
        remaining_days: 60
      register: challenge
    
    - name: "Create .well-known/acme-challenge directory"
      file:
        path: /var/www/html/.well-known/acme-challenge
        state: directory

    - name: Next challenge
      copy:
        dest: /var/www/html/{{ challenge['challenge_data']['vmdamien2.francecentral.cloudapp.azure.com']['http-01']['resource'] }}
        content: "{{ challenge['challenge_data']['vmdamien2.francecentral.cloudapp.azure.com']['http-01']['resource_value'] }}"
      when: challenge is changed and 'vmdamien2.francecentral.cloudapp.azure.com' in challenge['challenge_data']

    - name: validate acme challenge
      community.crypto.acme_certificate:
        acme_version: 2 
        account_key_src: '{{ ssl_key_a }}'
        csr: '{{ ssl_csr }}'
        dest: '{{ ssl_crt }}'
        fullchain: '{{ ssl_full }}'
        chain: '{{ ssl_chain }}'
        challenge: http-01
        acme_directory: https://acme-staging-v02.api.letsencrypt.org/directory
        remaining_days: 60
        data: '{{ challenge }}'
      when: challenge is changed

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted